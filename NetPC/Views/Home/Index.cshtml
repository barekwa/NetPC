@model List<Contact>
@if (TempData["Alert"] != null)
{
    <div class="alert alert-danger ">
        @TempData["Alert"]
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>Imię</th>
            <th>Nazwisko</th>
            <th>Email</th>
            <th>Telefon</th>
            @if(User.Identity.IsAuthenticated) //Hide button if user is not logged in
            {
                <th><a asp-controller="Contact" asp-action="AddContact" class="btn">Dodaj nowy</a></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var contact in Model)
        {
            <tr>
                <td>@contact.Name</td>
                <td>@contact.Surname</td>
                <td>@contact.Email</td>
                <td>@contact.Phone</td>
                <td>
                    <a asp-controller="Contact" asp-action="Details" asp-route-id="@contact.Id" class="btn btn-primary">Szczegóły</a>
                    @if(User.Identity.IsAuthenticated) //Hide buttons if user is not logged in
                    {
                        <a asp-controller="Contact" asp-action="UpdateContact" asp-route-id="@contact.Id" class="btn btn-warning">Edytuj</a>
                        <a onclick="deleteContact(@contact.Id)" class="btn btn-danger">Usuń kontakt</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    //function to handle deleting contacts
    function deleteContact(id) {
        if (confirm("Czy na pewno chcesz usunąć ten kontakt?")) { //confirm the deletion        
            fetch('/Contact/Delete?id=' + id, { method: 'POST' }) // Use fetch API to send a POST request to delete the contact
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        console.error(response.statusText);
                    }
                })
                .catch(error => console.error(error));
        }
    }
</script>